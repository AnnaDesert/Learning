openapi: 3.0.1
info:
  title: Национальный сервис мониторинга цен на продовольственные товары(OpenAPI 3.0)
  description: 'Национальный сервис мониторинга цен на продовольственные товары  Полезные ссылки: - [Репозиторий](https://github.com/AnnaDesert/Learning)'
  version: 1.0.11
servers:
  - url: http://localhost:8080
    description: Generated server url
tags:
  - name: product
    description: Запросы для product
  - name: batch
    description: Запросы для batch_of_product
  - name: category
    description: Запросы для product_category
  - name: shop
    description: Запросы для shop
  - name: catalog
    description: Запросы для product_catalog
  - name: user
    description: Запросы для user
paths:
  /user:
    get:
      tags:
        - user
      summary: Получить всеx пользователей
      description: Получить всеx пользователей
      operationId: allUser
      responses:
        '200':
          description: Все пользователи
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - user
      summary: Добваить пользователя
      description: Добваить нового пользователя
      operationId: singUpUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreationDTO'
        required: true
      responses:
        '200':
          description: Пользователь успешно добавлен
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /shop:
    get:
      tags:
        - shop
      summary: Получить все торговые точки
      description: Получить все торговые точки
      operationId: allShop
      responses:
        '200':
          description: Все торговые точки
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shop'
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - shop
      summary: Добваить торговую точку
      description: Добваить торговую точку
      operationId: addShop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShopDTO'
        required: true
      responses:
        '200':
          description: Торговая точка успешно добавлена
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /product:
    get:
      tags:
        - product
      summary: Получить все товары
      description: Получить все товары
      operationId: allProducts
      responses:
        '200':
          description: Все товары
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - product
      summary: Добваить продукт
      description: Добваить новый продукт
      operationId: addProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDTO'
        required: true
      responses:
        '200':
          description: Продукт добавлен
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /category:
    get:
      tags:
        - category
      summary: Получить все категории товара
      description: Получить все категории товара
      operationId: allCategory
      responses:
        '200':
          description: Все категории товара
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductCategory'
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - category
      summary: Добваить категорию товара
      description: Добваить категорию товара
      operationId: addCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategoryDTO'
        required: true
      responses:
        '200':
          description: Категория товара успешно добавлена
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /catalog:
    get:
      tags:
        - catalog
      summary: Получить все каталоги
      description: Получить все каталоги
      operationId: allCatalog
      responses:
        '200':
          description: Все каталоги
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductCatalog'
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - catalog
      summary: Добваить каталог
      description: Добваить каталог
      operationId: addCatalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCatalogDTO'
        required: true
      responses:
        '200':
          description: Каталог успешно добавлен
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /batch:
    get:
      tags:
        - batch
      summary: Получить все партии
      description: Получить все партии
      operationId: allBatch
      responses:
        '200':
          description: Все партии
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BatchOfProduct'
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - batch
      summary: Добваить партию
      description: Добваить партию
      operationId: addBatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchOfProductDTO'
        required: true
      responses:
        '200':
          description: Партия успешно добавлена
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/{id}:
    get:
      tags:
        - user
      summary: Получить пользователя по ID
      description: Получить пользователя по ID
      operationId: userById
      parameters:
        - name: id
          in: path
          description: ID пользователя
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Пользователь
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - user
      summary: Удалить пользователя по ID
      description: Удалить пользователя по ID
      operationId: removeUserById
      parameters:
        - name: id
          in: path
          description: ID пользователя
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Пользователь удален
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - user
      summary: Изменить пользователя
      description: Изменить пользователя
      operationId: updateUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreationDTO'
        required: true
      responses:
        '200':
          description: Пользователь успешно изменен
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /shop/{id}:
    get:
      tags:
        - shop
      summary: Получить торговую точку по ID
      description: Получить торговую точку по ID
      operationId: getShopById
      parameters:
        - name: id
          in: path
          description: ID торговой точки
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Торговая точка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - shop
      summary: Удалить торговую точку по ID
      description: Удалить торговую точку по ID
      operationId: removeShopById
      parameters:
        - name: id
          in: path
          description: ID торговой точки
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Торговая точка удалена
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - shop
      summary: Изменить торговую точку
      description: Изменить торговую точку
      operationId: updateShop
      parameters:
        - name: id
          in: path
          description: ID торговой точки
          required: true
          schema:
            $ref: '#/components/schemas/ShopDTO'
      responses:
        '200':
          description: Торговая точка успешно изменена
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /product/{id}:
    get:
      tags:
        - product
      summary: Получить товар по ID
      description: Получить товар по ID
      operationId: getProductById
      parameters:
        - name: id
          in: path
          description: ID товара
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Товар
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - product
      summary: Удалить товар по ID
      description: Удалить товар по ID
      operationId: removeProductById
      parameters:
        - name: id
          in: path
          description: ID товара
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Товар удален
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - product
      summary: Изменить продукт
      description: Изменить продукт
      operationId: updateProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDTO'
        required: true
      responses:
        '200':
          description: Продукт успешно изменен
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /category/{id}:
    get:
      tags:
        - category
      summary: Получить категорию товара по ID
      description: Получить категорию товара по ID
      operationId: getCategoryById
      parameters:
        - name: id
          in: path
          description: ID категории товара
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Категория товара
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCategory'
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - category
      summary: Удалить категорию товара по ID
      description: Удалить категорию товара по ID
      operationId: removeCategoryById
      parameters:
        - name: id
          in: path
          description: ID Категории товара
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Категория товара удалена
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - category
      summary: Изменить категорию товара
      description: Изменить категорию товара
      operationId: updateCategory
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCategoryDTO'
        required: true
      responses:
        '200':
          description: Категория товара успешно изменена
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /catalog/{id_shop}:
    get:
      tags:
        - catalog
      summary: Получить каталог по ID торговой точки
      description: Получить каталог по ID торговой точки
      operationId: getCatalogByIdShop
      parameters:
        - name: id_shop
          in: path
          description: ID торговой точки
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Кталог
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCatalog'
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - catalog
      summary: Удалить каталог по ID торговой точки
      description: Удалить каталог по ID торговой точки
      operationId: removeCatalogByIdShop
      parameters:
        - name: id_shop
          in: path
          description: ID торговой точки
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Кталог удален
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - catalog
      summary: Изменить каталог
      description: Изменить каталог
      operationId: updateCatalog
      parameters:
        - name: id_shop
          in: path
          description: ID каталога
          required: true
          schema:
            $ref: '#/components/schemas/ProductCatalogDTO'
      responses:
        '200':
          description: Каталог успешно изменен
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /batch/{id}:
    get:
      tags:
        - batch
      summary: Получить партию по ID
      description: Получить партию по ID
      operationId: getBatchById
      parameters:
        - name: id
          in: path
          description: ID партии
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Партия
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchOfProduct'
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - batch
      summary: Удалить партию по ID
      description: Удалить партию по ID
      operationId: removeBatchById
      parameters:
        - name: id
          in: path
          description: ID партии
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Партия удалена
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - batch
      summary: Изменить партию
      description: Изменить партию
      operationId: updateBatch
      parameters:
        - name: id
          in: path
          description: ID партии
          required: true
          schema:
            $ref: '#/components/schemas/BatchOfProductDTO'
      responses:
        '200':
          description: Партия успешно изменена
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/phoneNumber/{phoneNumber}:
    get:
      tags:
        - user
      summary: Получить пользователя по номеру телефона
      description: Получить пользователя по номеру телефона
      operationId: userByPhone
      parameters:
        - name: phoneNumber
          in: path
          description: Номер телефона
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Пользователь
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/email/{email}:
    get:
      tags:
        - user
      summary: Получить пользователя по адресу электронной пчты
      description: Получить пользователя по адресу электронной пчты
      operationId: userByEmail
      parameters:
        - name: email
          in: path
          description: Адрес электронной почты
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Пользователь
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /shop/name/{name}:
    get:
      tags:
        - shop
      summary: Получить торговую точку по названию
      description: Получить торговую точку по названию
      operationId: getShopByName
      parameters:
        - name: name
          in: path
          description: Название
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Торговая точка
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Shop'
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /shop/address/{address}:
    get:
      tags:
        - shop
      summary: Получить торговую точку по адресу
      description: Получить торговую точку по адресу
      operationId: getShopByAddress
      parameters:
        - name: address
          in: path
          description: Адрес
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Торговая точка
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shop'
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /product/name/{name}:
    get:
      tags:
        - product
      summary: Получить товар по названию
      description: Получить товар по названию
      operationId: getProductByName
      parameters:
        - name: name
          in: path
          description: Название товара
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Товар
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /category/name/{name}:
    get:
      tags:
        - category
      summary: Получить категорию товара по названию
      description: Получить категорию товара по названию
      operationId: getCategoryByName
      parameters:
        - name: name
          in: path
          description: Название категории товара
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Категория товара
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductCategory'
        default:
          description: Что-то пошло не так
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
          example: Ошибка!!!
    UserCreationDTO:
      required:
        - email
        - name
        - password
        - phoneNumber
        - role
        - surname
      type: object
      properties:
        name:
          type: string
        password:
          type: string
        surname:
          type: string
        phoneNumber:
          type: string
        email:
          type: string
        role:
          type: string
          enum:
            - SUPER_ADMIN
            - ADMIN
            - USER
      description: ID пользователя
    ShopDTO:
      required:
        - address
        - idAdmin
        - name
      type: object
      properties:
        name:
          type: string
        address:
          type: string
        idAdmin:
          type: integer
          format: int64
    ProductDTO:
      required:
        - name
      type: object
      properties:
        name:
          type: string
      description: ID продукта
    ProductCategoryDTO:
      required:
        - name
      type: object
      properties:
        name:
          type: string
      description: ID категории
    ProductCatalogDTO:
      required:
        - count
        - idBatch
        - price
      type: object
      properties:
        idBatch:
          type: integer
          format: int64
        count:
          type: integer
          format: int32
        price:
          type: number
          format: float
    BatchOfProductDTO:
      required:
        - count
        - expirationDateEnd
        - expirationDateStart
        - idProduct
      type: object
      properties:
        expirationDateStart:
          type: string
          format: date-time
        expirationDateEnd:
          type: string
          format: date-time
        idProduct:
          type: integer
          format: int64
        count:
          type: integer
          format: int32
    User:
      required:
        - email
        - name
        - password
        - phoneNumber
        - role
        - surname
      type: object
      properties:
        id:
          type: integer
          format: int64
        password:
          type: string
        name:
          type: string
        surname:
          type: string
        phoneNumber:
          type: string
        email:
          type: string
        role:
          type: string
          enum:
            - SUPER_ADMIN
            - ADMIN
            - USER
    Shop:
      required:
        - address
        - idAdmin
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        address:
          type: string
        idAdmin:
          type: integer
          format: int64
    Product:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    ProductCategory:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    ProductCatalog:
      required:
        - count
        - idBatch
        - price
      type: object
      properties:
        idShop:
          type: integer
          format: int64
        idBatch:
          type: integer
          format: int64
        count:
          type: integer
          format: int32
        price:
          type: number
          format: float
    BatchOfProduct:
      required:
        - count
        - expirationDateEnd
        - expirationDateStart
        - idProduct
      type: object
      properties:
        id:
          type: integer
          format: int64
        expirationDateStart:
          type: string
          format: date-time
        expirationDateEnd:
          type: string
          format: date-time
        idProduct:
          type: integer
          format: int64
        count:
          type: integer
          format: int32
